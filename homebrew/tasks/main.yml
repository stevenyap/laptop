---
- shell: which brew
  register: is_homebrew_installed
  ignore_errors: true

- name: Install HomeBrew
  shell: ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
  when: is_homebrew_installed.rc == 1

# Tap.
- name: Ensure configured taps are tapped.
  homebrew_tap: "tap={{ item }} state=present"
  with_items: "{{ homebrew_taps }}"

# Brew.
- name: Ensure configured homebrew packages are installed.
  homebrew: "name={{ item }} state=present"
  with_items: "{{ homebrew_installed_packages }}"

- name: Upgrade all homebrew packages (if configured).
  homebrew: update_homebrew=yes upgrade_all=yes
  when: homebrew_upgrade_all_packages

- name: Create LaunchAgents directory
  file: path={{ home_directory }}/Library/LaunchAgents/ state=directory

- name: Start services at login
  file: src=/usr/local/opt/{{ item  }}/homebrew.mxcl.{{ item  }}.plist path={{ home_directory }}/Library/LaunchAgents/homebrew.mxcl.{{ item  }}.plist state=link force=yes
  with_items: "{{ homebrew_start_services_at_login }}"

- shell: launchctl list
  register: launchctl_list
  changed_when: false

- name: Setup launch agents for services
  command: launchctl load {{ home_directory  }}/Library/LaunchAgents/homebrew.mxcl.{{ item  }}.plist
  with_items: "{{ homebrew_start_services_at_login }}"
  when: "'{{ item }}' not in launchctl_list.stdout"

# Cask.
- name: Get list of apps installed with cask.
  command: brew cask list
  register: homebrew_cask_list
  always_run: yes
  changed_when: false

- name: Install cask applications.
  command: >
    brew cask install {{ item }} --appdir={{ homebrew_cask_appdir }}
  with_items: "{{ homebrew_cask_apps }}"
  when: "'{{ item }}' not in homebrew_cask_list.stdout"

- name: Clean up downloaded installers
  command: brew cask cleanup
  always_run: yes
  changed_when: false
